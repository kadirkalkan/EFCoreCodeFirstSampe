// <auto-generated />
using System;
using EFCoreCodeFirstSample.Models.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EFCoreCodeFirstSample.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.14")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EFCoreCodeFirstSample.Models.Entities.Kitap", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BasimYili")
                        .HasColumnType("int");

                    b.Property<DateTime>("EklenmeTarihi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<decimal>("Fiyat")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("SayfaSayisi")
                        .HasColumnType("int");

                    b.Property<int>("YazarId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("YazarId");

                    b.ToTable("Kitaplar");
                });

            modelBuilder.Entity("EFCoreCodeFirstSample.Models.Entities.KitapTur", b =>
                {
                    b.Property<int>("KitapId")
                        .HasColumnType("int");

                    b.Property<int>("TurId")
                        .HasColumnType("int");

                    b.HasKey("KitapId", "TurId");

                    b.HasIndex("TurId");

                    b.ToTable("KitapTurleri");
                });

            modelBuilder.Entity("EFCoreCodeFirstSample.Models.Entities.Tur", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Turler");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Fantezi"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Macera"
                        });
                });

            modelBuilder.Entity("EFCoreCodeFirstSample.Models.Entities.Yazar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Yazarlar");
                });

            modelBuilder.Entity("EFCoreCodeFirstSample.Models.Entities.YazarDetay", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("YazarDetaylari");
                });

            modelBuilder.Entity("EFCoreCodeFirstSample.Models.Entities.Kitap", b =>
                {
                    b.HasOne("EFCoreCodeFirstSample.Models.Entities.Yazar", "Yazar")
                        .WithMany("Kitaplar")
                        .HasForeignKey("YazarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Yazar");
                });

            modelBuilder.Entity("EFCoreCodeFirstSample.Models.Entities.KitapTur", b =>
                {
                    b.HasOne("EFCoreCodeFirstSample.Models.Entities.Kitap", "Kitap")
                        .WithMany("KitapTurleri")
                        .HasForeignKey("KitapId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EFCoreCodeFirstSample.Models.Entities.Tur", "Tur")
                        .WithMany("KitapTurleri")
                        .HasForeignKey("TurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kitap");

                    b.Navigation("Tur");
                });

            modelBuilder.Entity("EFCoreCodeFirstSample.Models.Entities.YazarDetay", b =>
                {
                    b.HasOne("EFCoreCodeFirstSample.Models.Entities.Yazar", "Yazar")
                        .WithOne("YazarDetay")
                        .HasForeignKey("EFCoreCodeFirstSample.Models.Entities.YazarDetay", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Yazar");
                });

            modelBuilder.Entity("EFCoreCodeFirstSample.Models.Entities.Kitap", b =>
                {
                    b.Navigation("KitapTurleri");
                });

            modelBuilder.Entity("EFCoreCodeFirstSample.Models.Entities.Tur", b =>
                {
                    b.Navigation("KitapTurleri");
                });

            modelBuilder.Entity("EFCoreCodeFirstSample.Models.Entities.Yazar", b =>
                {
                    b.Navigation("Kitaplar");

                    b.Navigation("YazarDetay")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
